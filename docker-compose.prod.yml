#version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    command: /bin/sh -c "sleep 5 && gunicorn app.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/mediafiles
    expose:
      - 8000
    env_file:
      - ./.env.prod
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - NVIDIA_VISIBLE_DEVICES=all
    depends_on:
      - db
      - redis
    deploy:
      resources:
        reservations:
          devices:
          - capabilities: ["gpu"]

  redis:
    image: redis
    ports:
      - 6379:6379


  celery_worker:
    build: ./backend
    command: celery -A celery_app worker --loglevel=info
    env_file:
      - ./.env.prod
    depends_on:
      - db    
      - redis
    volumes:
      - ./backend/:/usr/src/app/
      - static_volume:/usr/src/app/staticfiles  
      - media_volume:/usr/src/app/mediafiles 

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    command: npm run start
    volumes:
      - static_volume:/usr/src/app/.next/static
    expose:
      - 3000
    env_file:
      - ./.env.prod


  nginx:
    build: ./nginx
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/mediafiles
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend


volumes:
  postgres_data:
  static_volume:
  media_volume: