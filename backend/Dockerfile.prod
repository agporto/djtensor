###########
# BUILDER #
###########

# pull official base image
# FROM tensorflow/tensorflow:latest-gpu AS builder
FROM nvcr.io/nvidia/tensorflow:23.05-tf2-py3 AS builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV DEBIAN_FRONTEND=noninteractive

# # install system dependencies
# RUN apt-get update && \
#     apt-get install -y --no-install-recommends gcc
RUN ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime

# Install system dependencies including wget
# RUN apt-get update && apt-get install -y \
#     gcc \
#     libhdf5-dev \
#     pkg-config \
#     netcat \
#     build-essential \
#     software-properties-common \
#     wget  # Include wget in the installation

# Add the deadsnakes PPA for newer Python versions
# RUN add-apt-repository ppa:deadsnakes/ppa \
#     && apt-get update \
#     && apt-get install -y python3.11 python3.11-venv python3.11-dev

# # Download and install pip using get-pip.py script
# RUN wget https://bootstrap.pypa.io/get-pip.py \
#     && python3.11 get-pip.py \
#     && rm get-pip.py

# # Verify pip installation
# RUN python3.11 -m pip --version

# # Upgrade pip
# RUN python3.11 -m pip install --upgrade pip

# # lint
# RUN pip install flake8==6.0.0
# COPY . /usr/src/app/
# RUN flake8 --ignore=E501,F401 . || exit 0

# install python dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
# FROM tensorflow/tensorflow:latest-gpu
FROM nvcr.io/nvidia/tensorflow:23.05-tf2-py3 
WORKDIR /usr/src/app

# create directory for the app user
# RUN mkdir -p /home/ 

# create the app user
# RUN addgroup --system app && adduser --system --group app

# create the appropriate directories
# ENV HOME=/home/
ENV APP_HOME=/usr/src/app
ENV DEBIAN_FRONTEND=noninteractive 

# RUN mkdir $APP_HOME
# RUN mkdir $APP_HOME/staticfiles
# RUN mkdir $APP_HOME/mediafiles

#ensure
# # Set ownership and permissions
# RUN mkdir -p /home/backend/staticfiles /home/backend/mediafiles

# # Set ownership and permissions
# RUN chown -R app:app /home/backend && \
#     chmod -R 777 /home/backend/mediafiles



# WORKDIR $APP_HOME

# install dependencies
# RUN apt-get update && apt-get install -y \
#     gcc \
#     libhdf5-dev \ 
#     pkg-config \ 
#     netcat \    
#     build-essential \ 
#     software-properties-common \
#     wget  # Include wget in the installation

RUN apt-get update && apt-get install -y \
    postgresql-client 

# Add the deadsnakes PPA for newer Python versions
# RUN add-apt-repository ppa:deadsnakes/ppa \
#     && apt-get update \
#     && apt-get install -y python3.11 python3.11-venv python3.11-dev 

# # Download and install pip using get-pip.py script
# RUN wget https://bootstrap.pypa.io/get-pip.py \
#     && python3.11 get-pip.py \
#     && rm get-pip.py

# Verify pip installation
# RUN python3.11 -m pip --version

# Upgrade pip
# RUN python3.11 -m pip install --upgrade pip
# RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1

COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME

# chown all the files to the app user
# RUN chown -R app:app $APP_HOME

# change to the app user
# USER app

# run entrypoint.prod.sh
ENTRYPOINT ["/home/backend/entrypoint.prod.sh"]
